unit TestUUtils;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.SysUtils, Vcl.Forms, System.Variants, FireDAC.Comp.Client,
  Winapi.Windows, Vcl.Controls, Vcl.Dialogs, System.Win.ComObj, UUtils;

type
  // Test methods for class TCursor

  TestTCursor = class(TTestCase)
  strict private
    FCursor: TCursor;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  end;
  // Test methods for class TUtils

  TestTUtils = class(TTestCase)
  strict private
    FUtils: TUtils;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestfValorFinalProduto;
  end;

implementation

procedure TestTCursor.SetUp;
begin
  FCursor := TCursor.Create;
end;

procedure TestTCursor.TearDown;
begin
  FCursor.Free;
  FCursor := nil;
end;

procedure TestTUtils.SetUp;
begin
  FUtils := TUtils.Create;
end;

procedure TestTUtils.TearDown;
begin
  FUtils.Free;
  FUtils := nil;
end;

procedure TestTUtils.TestfValorFinalProduto;
var
  ReturnValue: Double;
  AValorImpostos: Double;
  AValorProduto: Double;
begin
  AValorProduto := 100;
  AValorImpostos:= 35;

  ReturnValue := FUtils.fValorFinalProduto(AValorProduto, AValorImpostos);

  CheckEquals(65, ReturnValue, 'Função de valor final produto está com divergência!');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTCursor.Suite);
  RegisterTest(TestTUtils.Suite);
end.

